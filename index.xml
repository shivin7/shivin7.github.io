<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shivin Thukral</title>
    <link>https://shivin7.github.io/</link>
      <atom:link href="https://shivin7.github.io/index.xml" rel="self" type="application/rss+xml" />
    <description>Shivin Thukral</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Fri, 01 Oct 2021 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://shivin7.github.io/media/icon_hu613356a2eab380f8431040188af1709c_11558_512x512_fill_lanczos_center_3.png</url>
      <title>Shivin Thukral</title>
      <link>https://shivin7.github.io/</link>
    </image>
    
    <item>
      <title>Multilingual Unsupervised Sequence Segmentation transfers to Extremely Low-resource Languages</title>
      <link>https://shivin7.github.io/publication/xlslm/</link>
      <pubDate>Fri, 01 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://shivin7.github.io/publication/xlslm/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Probing Language Models for Understanding of Temporal Expressions</title>
      <link>https://shivin7.github.io/publication/temporal-exprs/</link>
      <pubDate>Wed, 01 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://shivin7.github.io/publication/temporal-exprs/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Detection of Malicious Android Applications: Classical Machine Learning vs. Deep Neural Network Integrated with Clustering</title>
      <link>https://shivin7.github.io/publication/android-paper/</link>
      <pubDate>Fri, 05 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://shivin7.github.io/publication/android-paper/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Distributional Modelling of Cross-Cultural Judgement of Food Terms</title>
      <link>https://shivin7.github.io/project/bits_thesis/</link>
      <pubDate>Sun, 01 Dec 2019 00:00:00 +0000</pubDate>
      <guid>https://shivin7.github.io/project/bits_thesis/</guid>
      <description>&lt;p&gt;This project was done as an undergraduate thesis component, under the supervision of &lt;a href=&#34;https://www.ims.uni-stuttgart.de/en/institute/team/Pado-00001/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Prof. Sebastian Padó&lt;/a&gt; and &lt;a href=&#34;https://www.ling.uni-konstanz.de/en/frassinelli/diego-frassinelli/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Prof. Diego Frassinelli&lt;/a&gt; at &lt;a href=&#34;https://www.ims.uni-stuttgart.de/en/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Institute of Natural Language Processing&lt;/a&gt;, University of Stuttgart.&lt;/p&gt;
&lt;p&gt;As part of this project:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The motivation was to explore presence of cultural information in distributional vectors of different food terms&lt;/li&gt;
&lt;li&gt;Sentences for each food term were extracted from Wikipedia corpus and contextual embeddings were formed using BERT Framework&lt;/li&gt;
&lt;li&gt;Models were trained to predict norms of people (culture) from embedding space (language) which reached upto 0.7 correlation in few aspects&lt;/li&gt;
&lt;li&gt;Cross-lingual models over multiple norms performed better for English embeddings due to richer feature space&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Robustness Testing of Neural Networks</title>
      <link>https://shivin7.github.io/project/robustness/</link>
      <pubDate>Mon, 01 Apr 2019 00:00:00 +0000</pubDate>
      <guid>https://shivin7.github.io/project/robustness/</guid>
      <description>&lt;p&gt;This was a design project under the supervision of &lt;a href=&#34;https://tirtharajdash.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Prof. Tirtharaj Dash&lt;/a&gt; at BITS Pilani, K K Birla Goa Campus. The aim of this project was to train a model which generates minimum noise to fool a pre-trained neural network.&lt;/p&gt;
&lt;p&gt;The following was done as part of the design project :&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Initially, random Gaussian noise was added to different (deep/shallow) neural networks trained on MNIST data and their robustness was compared by measuring the minimum amount of noise that needed to be added to produce a certain threshold of misclassification&lt;/li&gt;
&lt;li&gt;After this we attempted to train the noise using a neural network. For this purpose, a basic dataset of modulus-2 was used. A classifier NN was trained on it, and then an adversarial NN was used to produce minimum noise which when added to inputs of the classifier NN produces wrong outputs. Two loss functions were used to train the adversarial NN :&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Misclassification Loss – The accuracy between completely wrong labels of inputs and labels produced by classifier NN when inputs + noise by adversarial NN is fed&lt;/li&gt;
&lt;li&gt;Regularization Loss – L2 loss corresponding to the amount of noise produced by adversarial NN&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;After this, a Dog/Cat image dataset was used so that the noise added could be visualized easily, and it could be interpreted if the added noise is less perceptible to human eyes but crucial in changing the class of a pre-trained neural network. An auto-encoder architecture was employed for the same, and results were compared by trying different architectures, loss weightage, input size, etc.&lt;/li&gt;
&lt;li&gt;To try and improve the noise producing capacity of adversarial NN, we tried to convert it completely into a CNN, employing a deep architecture by using VGG16. However, we have had some problems in making the model converge to produce stable noise, and further work needs to be done by trying different combinations in architecture.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Emotion Analysis of Food Reviews</title>
      <link>https://shivin7.github.io/project/emotion/</link>
      <pubDate>Sat, 01 Dec 2018 00:00:00 +0000</pubDate>
      <guid>https://shivin7.github.io/project/emotion/</guid>
      <description>&lt;p&gt;This project was a part of the &lt;em&gt;Information Retrieval&lt;/em&gt; course offered at BITS Pilani, K K Birla Goa Campus. The goal of this project is to perform sentiment analysis of Amazon Fine Food Reviews dataset, and this is done using an IR model in which each review is scored on a sentiment score of 0-5 against 5 different aspects:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Taste Quality&lt;/li&gt;
&lt;li&gt;Product Quality&lt;/li&gt;
&lt;li&gt;Price&lt;/li&gt;
&lt;li&gt;Quantity&lt;/li&gt;
&lt;li&gt;Delivery&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main steps that go about into the IR model are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Sentence Decomposition&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Forming micro-sentences from entire review [input]&lt;/li&gt;
&lt;li&gt;Exclamatory phrases like ‘Wow!’ form individual micro-sentences, and add to emotional weight of neighboring micro-sentences&lt;/li&gt;
&lt;li&gt;Isolated-word spelling correction using n-gram index edit distance&lt;/li&gt;
&lt;li&gt;Can use frameworks like NLTK for decomposition into micro-sentences&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Feature-Emotion Extraction&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;List of features (example – food quality, service) composed&lt;/li&gt;
&lt;li&gt;Dictionary of emotions/adjectives along with their polarity score used (example – SenticNet)&lt;/li&gt;
&lt;li&gt;Dictionary of emojis/emoticons (text/image/encoded form) along with their polarity score used (example – Emoji Sentiment Ranking)&lt;/li&gt;
&lt;li&gt;POS-tagging used to extract object (feature) and adjective (emotion) of each micro-sentence&lt;/li&gt;
&lt;li&gt;Score of each feature calculated by corresponding emotion’s polarity score&lt;/li&gt;
&lt;li&gt;Polarity of emoji contributes to score of particular feature depending on context/position of emoji&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Scoring&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;For each feature, scores of individual micro-sentences summed&lt;/li&gt;
&lt;li&gt;Final feature scores normalized to prevent discrimination between lenient/strict raters [output&lt;/li&gt;
&lt;li&gt;Final emotion (example – satisfied, angry) of user calculated on basis of weighted scores of all features [output]&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Inventory Website Development for University Auditorium</title>
      <link>https://shivin7.github.io/project/website/</link>
      <pubDate>Thu, 01 Feb 2018 00:00:00 +0000</pubDate>
      <guid>https://shivin7.github.io/project/website/</guid>
      <description>&lt;p&gt;This project was used for development of a website for tracking item inventory as per the requirement of Department of Backstage, BITS Goa. The website has since been used during all major fests and events for proper inventory management.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Image De-Raining using Deconvolutional Networks</title>
      <link>https://shivin7.github.io/project/deraining/</link>
      <pubDate>Fri, 01 Dec 2017 00:00:00 +0000</pubDate>
      <guid>https://shivin7.github.io/project/deraining/</guid>
      <description>&lt;p&gt;This project was a part of the &lt;em&gt;Neural Networks and Fuzzy Logic&lt;/em&gt; course offered at BITS Pilani, K K Birla Goa Campus. The goal of this project was to train a neural network to take as input rainy images and produce rain-free images as output.&lt;/p&gt;
&lt;p&gt;As part of this project:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Different models (auto-encoders/GANs) were trained to produce rain free images in a supervised setting&lt;/li&gt;
&lt;li&gt;TensorFlow framework used to implement deep networks for model training&lt;/li&gt;
&lt;li&gt;Considerable rain-free images were produced both on synthetic and natural rainy images without much perturbations&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://shivin7.github.io/admin/config.yml</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://shivin7.github.io/admin/config.yml</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
